
Autocmd <buffer> or <buffer=99>
	BufNewFile

Read config from file on:
	plugin start
	autocmd VimEnter
	ReadConfig()

Save macros to file on:
	SaveConfig()
	autocmd QuitPre

Save macros to memory on:
	SaveToMemory()
	autocmd WinLeave
	keypress q, etc

Config
	SplitVertical   = 1
	SplitHorizontal = 0
	verbose errors

Macro window mappings
	mustn't interfere with navigation or editing

	q     quit
	<esc> quit
	<f1>  help
	c     commit changes to memory
	s     save changes to file
	r     read macros from file
	r     refresh?
	p     pin macro to register (move skips this reg)
	x     execute macro on alternate buffer
	<cr>  execute

Let the user 'source' the macro files?
	autocmd SourcePre	before sourcing a Vim script
	autocmd SourceCmd	before sourcing a Vim script |Cmd-event|

Functions
	WipeRegisters([list])

Like git rebase:
	reorder list
	add items
	delete items
	edit items
	commit
		sync to memory registers
		fix regnames
		mark as not modified
		ignore comments
		ignore blank lines

Trap autocmds, then auto-commit to memory (and fix reg names)
	InsertEnter
	InsertChange
	InsertLeave
	use undotree() info to detect changes?

How can I detect other changes to registers?
	Probably can't
	Just sync internal list to registers before every function call

How can multiple running copies of vim coordinate?
	cf wviminfo, rviminfo
	need to delete the buffer after closing to prevent swapfile collision

Syntax for macro window
	^[-a-zA-Z]\**	.*
	match regex to register config

Clear other mappings?
	mapclear <buffer>

Option: move pinned macros to end of list

to prevent accidents?
	map q <nop>
no, need to trap it so I know when a recording finishes

need to map
	qa startmacro() rotate first
	qA startmacro() no rotate

don't rotate empty registers?

on WinLeave, save the cursor position in a window-local variable

refresh to update indices

if a macro is locked, ignore changes in the register
	'K' is locked
	@k has changed
	on 'Sync', read registers into variable (skipping locked)
	push variable back into registers

change file format:
	" HEADER
	" Locked: 9,11,20
	RAW_MACRO1
	RAW_MACRO2
	...

edit mode
	strip system comments?
	strip blank lines?
	strip letter-locked-tab
	intercept :q :quit ZZ to leave edit mode
	intercept :w etc to commit changes
	edit mode mappings? (for what?)

